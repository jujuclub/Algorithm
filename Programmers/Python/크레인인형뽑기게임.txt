def solution(board, moves):
    answer = 0
    basket = [0]
    
    N = len(board)
    idx_list = [0 for _ in range(N)]
    
    for i in range(N):
        for j in range(N):
            if board[j][i] != 0:
                continue
            idx_list[i] += 1
            
    for move in moves:
        if idx_list[move-1] != N:
            if board[idx_list[move-1]][move-1] != basket[-1]:
                basket.append(board[idx_list[move-1]][move-1])
                idx_list[move-1] += 1
            else:
                basket.pop()
                idx_list[move-1] += 1
                answer += 2
                
    return answer


(참고 : https://somjang.tistory.com/entry/Programmers-2019-%EC%B9%B4%EC%B9%B4%EC%98%A4-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EA%B2%A8%EC%9A%B8-%EC%9D%B8%ED%84%B4%EC%8B%AD-%ED%81%AC%EB%A0%88%EC%9D%B8-%EC%9D%B8%ED%98%95%EB%BD%91%EA%B8%B0-%EA%B2%8C%EC%9E%84-Python)